{
  "version": 3,
  "sources": [
    "../../../../../../web/bundles/observation/js/Maps/mapping.js"
  ],
  "names": [
    "locations",
    "lastOpenInfoWindow",
    "markers",
    "markerClusterer",
    "initMap",
    "map",
    "google",
    "maps",
    "Map",
    "document",
    "getElementById",
    "zoom",
    "center",
    "lat",
    "lng",
    "$",
    "ajax",
    "url",
    "type",
    "success",
    "data",
    "addMarkers",
    "append",
    "removeAttr",
    "on",
    "event",
    "i",
    "length",
    "setMap",
    "remove",
    "val",
    "result",
    "location",
    "marker",
    "Marker",
    "position",
    "Number",
    "icon",
    "path",
    "SymbolPath",
    "CIRCLE",
    "scale",
    "fillColor",
    "fillOpacity",
    "strokeWeight",
    "content",
    "image",
    "name",
    "description",
    "ficheUrl",
    "addUrl",
    "addInfoWindow",
    "MarkerClusterer",
    "imagePath",
    "infoWindow",
    "InfoWindow",
    "addListener",
    "close",
    "open"
  ],
  "mappings": "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",
  "file": "mapping.js",
  "sourcesContent": [
    "var locations = [];\nvar lastOpenInfoWindow;\nvar markers = [];\nvar markerClusterer\n// fonction appelant la carte maps et ajoutant les markers\nfunction initMap() {\n    // Appelle de la map\n    var map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 6,\n        center: {lat: 46.2276, lng: 2.2137}\n    });\n    // Requete ajax pour récuperer la liste des localisation des oiseaux\n    $.ajax({\n        url: '/app_dev.php/bird/paging-all',\n        type: 'GET',\n        success: function (data) {\n            // la requete est un success\n            // on vérifie si data.success est true\n            if (data.success) {\n                addMarkers(data)\n            }else{\n                // Il n'y a pas d'oiseaux à localiser\n                $('#filter').append('<p id=\"status\">Aucuns oiseaux  observer</p>');\n            }\n            $('#filters').removeAttr('disabled');\n        }\n    });\n    $(\"#filters\").on('change', function (event) {\n        // On vide la carte de tous markers pour repartir a 0\n        for (var i = 0; i < markers.length; i++) {\n            markers[i].setMap(null);\n            markers[i] = null\n        }\n        locations = [];\n        markers = [];\n        // On retire tout texte précedent de filter\n        $('#status').remove();\n        $.ajax({\n            url: '/app_dev.php/bird/paging-all?bird=' + $(this).val(),\n            type: 'GET',\n            success: function (data) {\n\n                // on vérifie si data.success est true\n                if (data.success) {\n                    addMarkers(data)\n                }else{\n                    // Sinon aucune observation pour l'espece\n                    $('#filter').append('<p id=\"status\">Aucune observation pour l\\'espece séléctionne</p>')\n                }\n\n            }\n        });\n    })\n    function addMarkers(data){\n        for (var i = 0; i < data.result.length; i++) {\n            // On ajoute chaque entrées au tableau locations\n            locations[i] = data.result[i];\n        }\n        // ajout des marqueurs sur la carte\n        markers = locations.map(function (location, i) {\n            // Création d'un marqueur sur la position de location\n            var marker = new google.maps.Marker({\n                position: {lat: Number(location[0].lat), lng: Number(location[0].lng)},\n                // Affichage d'un cercle au couleur de NAO\n                icon: {\n                    path: google.maps.SymbolPath.CIRCLE,\n                    scale: 12,\n                    fillColor: '#99d1c8',\n                    fillOpacity: 0.8,\n                    strokeWeight: 1\n                }\n            });\n\n            // contenu html de l'infowindow en fonction du contenu de location\n            var content = '<div class=\"container\"><div class=\"row\"><div class=\"col-xs-4\">' + location[1].image + '</div><div class=\"col-xs-8\"><h5>' + location[1].name + '</h5><p>' + location[1].description + '</p><a href=\"' + location[1].ficheUrl + '\">Fiche oiseau</a> <a href=\"' + location[1].addUrl + '\">Ajouter observation</a></div></div></div></div>';\n            addInfoWindow(marker, content);\n            return marker;\n        });\n\n        // création d'un clusterer pour les groupes de markers\n        markerClusterer = new MarkerClusterer(map, markers, {\n            imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n        });\n    }\n\n}\n\n\n// fonction ajoutant l'infowindow et la lie au marker\nfunction addInfoWindow(marker, content) {\n\n    var infoWindow = new google.maps.InfoWindow({\n        content: content\n    });\n\n    google.maps.event.addListener(marker, 'mouseover', function () {\n        // On vérifie si une autre windows est ouvert, dans ce cas on la ferme\n        if (lastOpenInfoWindow != null) {\n            lastOpenInfoWindow.close();\n        }\n        infoWindow.open(map, marker);\n        lastOpenInfoWindow = infoWindow;\n    });\n\n}"
  ]
}